{"version":3,"sources":["http-common.ts","services/PostService.ts","components/PostAdd.tsx","components/PostEdit.tsx","components/PostListItem.tsx","components/PostList.tsx","App.tsx","index.tsx"],"names":["axios","create","baseURL","headers","PostService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","AddPostCard","initialPostsState","title","image_url","content","lat","long","useState","cities","setPosts","submitted","setSubmitted","disabled","setDisabled","useEffect","handleInputChange","event","target","name","value","savePost","a","PostDataService","response","console","log","style","maxWidth","margin","onClick","className","htmlFor","type","required","onChange","width","Post","props","published","currentPost","setCurrentPost","message","setMessage","getPost","match","params","updatePost","deletePost","history","push","textAlign","background","opacity","marginBottom","src","alt","frameBorder","scrolling","marginHeight","marginWidth","to","PostList","setCities","retrievePosts","useCallback","length","map","setActivePost","PostListItem","App","exact","path","component","PostAdd","PostEdit","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8d1f6912.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3000/api/v1\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nimport IPostData from \"../types/IPostData\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/posts\");\r\n};\r\n\r\nconst get = (id: string) => {\r\n  return http.get(`/posts/${id}`);\r\n};\r\n\r\nconst create = (data: IPostData) => {\r\n  return http.post(\"/posts\", data);\r\n};\r\n\r\nconst update = (id: string, data: IPostData) => {\r\n  return http.put(`/posts/${id}`, data);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n  return http.delete(`/posts/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/posts`);\r\n};\r\n\r\nconst PostService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n};\r\n\r\nexport default PostService;","import React, { useState, ChangeEvent } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport PostDataService from '../services/PostService';\r\nimport IPostData from '../types/IPostData';\r\n\r\nconst AddPostCard: React.FC = () => {\r\n  const initialPostsState: IPostData = {\r\n    title: \"\",\r\n    image_url: \"\",\r\n    content: \"\",\r\n    lat: \"\",\r\n    long: \"\",\r\n  };\r\n\r\n  const [cities, setPosts] = useState<IPostData>(initialPostsState);\r\n  const [submitted, setSubmitted] = useState<boolean>(false);\r\n  const [disabled, setDisabled] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (cities.title && cities.image_url && cities.content && cities.lat && cities.long) {\r\n      setDisabled(false);\r\n    }\r\n  }, [cities]);\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setPosts({ ...cities, [name]: value });\r\n  };\r\n\r\n  const savePost = async () => {\r\n    let data = {\r\n      id: null,\r\n      title: cities.title,\r\n      image_url: cities.image_url,\r\n      content: cities.content,\r\n      lat: cities.lat,\r\n      long: cities.long,\r\n    };\r\n\r\n    try {\r\n      const response = await PostDataService.create(data)\r\n      setPosts(response.data as IPostData);\r\n      setSubmitted(true);\r\n    }\r\n    catch(e: any)  {\r\n        console.log(e);\r\n      }\r\n  };\r\n\r\n  const newPost = () => {\r\n    setPosts(initialPostsState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{maxWidth: \"500px\", margin: \"auto\"}}>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button onClick={newPost}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={cities.title}\r\n              onChange={handleInputChange}\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"content\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={cities.content}\r\n              onChange={handleInputChange}\r\n              name=\"content\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"image_url\">Image</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={cities.image_url}\r\n              onChange={handleInputChange}\r\n              name=\"image_url\"\r\n            />\r\n          </div>\r\n   \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lat\">Latitude</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={cities.lat}\r\n              onChange={handleInputChange}\r\n              name=\"lat\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"long\">Longitud</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={cities.long}\r\n              onChange={handleInputChange}\r\n              name=\"long\"\r\n            />\r\n          </div>\r\n          \r\n          <button onClick={savePost} type=\"submit\" disabled={disabled} style={{width: \"100%\"}}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AddPostCard;","import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PostDataService from \"../services/PostService\";\r\nimport IPostData from \"../types/IPostData\";\r\n\r\ninterface RouterProps {\r\n  id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\nconst Post: React.FC<Props> = (props: Props) => {\r\n  const initialPostState = {\r\n    id: null,\r\n    title: \"\",\r\n    content: \"\",\r\n    image_url: \"\",\r\n    lat: \"\",\r\n    long: \"\",\r\n    published: false\r\n  };\r\n  const [currentPost, setCurrentPost] = useState<IPostData>(initialPostState);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  const getPost = async (id: string) => {\r\n    try {\r\n      const response = await PostDataService.get(id)\r\n      setCurrentPost(response.data);\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPost(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setCurrentPost({ ...currentPost, [name]: value });\r\n  };\r\n\r\n  const updatePost = async () => {\r\n    try {\r\n      await PostDataService.update(currentPost.id, currentPost)\r\n      setMessage(\"The Post was updated successfully!\");\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deletePost = async () => {\r\n    try {\r\n      await PostDataService.remove(currentPost.id)\r\n      props.history.push(\"/\");\r\n    }\r\n    catch (e){\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{maxWidth: \"500px\", margin: \"auto\"}}>\r\n      {currentPost ? (\r\n        <div>\r\n          <h4 style={{textAlign: \"center\"}}>Post</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={currentPost.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"content\"\r\n                value={currentPost.content}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Image</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"image_url\"\r\n                value={currentPost.image_url}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Latitude</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"lat\"\r\n                value={currentPost.lat}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>     \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Longitude</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"long\"\r\n                value={currentPost.long}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n\r\n          <div>  \r\n            <button type=\"submit\" onClick={updatePost} style={{width: \"50%\"}}>\r\n              Update\r\n            </button>\r\n            <button onClick={deletePost} style={{width: \"50%\", background: \"red\", opacity: \"0.75\"}}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n          <p style={{textAlign: \"center\"}}>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;","import { Link } from 'react-router-dom';\r\nimport IPostData from '../types/IPostData';\r\n\r\nconst Post = ({post} : {post: IPostData}) => {\r\n    return <div>\r\n      <h2 className=\"post-title\">\r\n        {post.title}\r\n      </h2>\r\n      <p className=\"post-description\">\r\n        {post.content}y\r\n      </p>\r\n      <div style={{marginBottom: \"10px\" }}>\r\n        <img className=\"image_url\" src={post.image_url} alt={post.image_url} />\r\n      </div>\r\n      <iframe \r\n        title=\"myframe\"\r\n        frameBorder=\"0\" \r\n        scrolling=\"no\" \r\n        marginHeight={0} \r\n        marginWidth={0}\r\n        src={`http://maps.google.com/maps?q=${post.lat},${post.long}&hl=es&z=14&output=embed`}\r\n      >\r\n      </iframe>\r\n      <p>\r\n      <Link\r\n        to={\"/\" + post.id}\r\n        className=\"\"\r\n      >\r\n        Edit\r\n      </Link>\r\n      </p>\r\n    </div>\r\n  }\r\n\r\n  export default Post\r\n  ","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport IPostData from '../types/IPostData';\r\nimport PostDataService from '../services/PostService';\r\nimport PostListItem from './PostListItem';\r\n\r\nconst PostList = () => {\r\n  const [cities, setCities] = useState<Array<IPostData>>([]);\r\n  const [currentPost, setCurrentPost] = useState<IPostData | null>(null);\r\n\r\n  const retrievePosts = useCallback(async () => {\r\n    try {\r\n      const response = await PostDataService.getAll()\r\n      setCities(response.data);\r\n    }\r\n    catch(e: any) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    retrievePosts();\r\n  }, [retrievePosts]);\r\n\r\n  useEffect(() => {\r\n    if (cities?.length > 0 && !currentPost) {\r\n      setCurrentPost(cities[0])\r\n    }\r\n  }, [cities, currentPost]);\r\n\r\n  const setActivePost = (post: IPostData) => {\r\n    setCurrentPost(post)\r\n  };\r\n\r\n  return (\r\n    <div className=\"App-post-list\">\r\n      <div className=\"post-list\">\r\n        <h4>Find your next destination</h4>\r\n        <ul className=\"list\">\r\n          {cities &&\r\n            cities.map((post) => (\r\n              <li \r\n                className={\"list-item\" + (post.id === currentPost?.id ? \"-active\" : \"\") }\r\n                onClick={() => setActivePost(post)}\r\n                key={post.id}\r\n              >\r\n                {post.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"post-list-description\">\r\n        {currentPost ? (\r\n         <PostListItem post={currentPost} />\r\n        ) : (\r\n          <p>Please click on a Post...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;","import React, { Switch, Route, Link } from \"react-router-dom\";\r\nimport PostAdd from './components/PostAdd';\r\nimport PostEdit from './components/PostEdit';\r\nimport PostList from './components/PostList';\r\nimport \"./stylesheets/App.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"header-nav\">\r\n        <Link to=\"/\">\r\n          Wefox-Club\r\n        </Link>\r\n        <ul className=\"header-list\">\r\n          <li className=\"header-list\">\r\n            <Link to={\"/add\"} className=\"header-item\">\r\n              Add Post\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <div className=\"main-container\">\r\n        <div className=\"main\">\r\n          <Switch>\r\n            <Route exact path={[\"/\"]} component={PostList} />\r\n            <Route exact path=\"/add\" component={PostAdd} />\r\n            <Route path=\"/:id\" component={PostEdit} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n\r\n      <footer>\r\n        Copyright (C) 2021 Tor3m\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={'/react_challenge'}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}